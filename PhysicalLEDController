// 0. Documentation
//    Purpose:          To develop a program in C that will leverage the IOs available on TI's Tiva C Series LaunchPad to 
//                      toggle an external red LED based on the input received by a switch assembled on a breadboard.  
//    Author:           Ricardo Morocz
//    Date:             07/20/2017
//    Acknowledgement:  Work based on the code developed by Ramesh Yerraballi & Jon Valvano as part of the UT Austin's 
//                      Embedded Systems online course lab 8 set-up
//    Notes:            - built-in connection: PE0 connected to positive logic switch on breadboard
//                      - built-in connection: PE1 connected to positive logic low current red LED on breadboard

//--------------------------------------------------------------------------------------------------------------------------
// 1. Pre-processor Directives
#include "TExaS.h"
#include "tm4c123gh6pm.h"

//CONVERT FROM PORT F TO PORT E
#define GPIO_PORTF_DATA_R       (*((volatile unsigned long *)0x400253FC))
#define GPIO_PORTF_DIR_R        (*((volatile unsigned long *)0x40025400))
#define GPIO_PORTF_AFSEL_R      (*((volatile unsigned long *)0x40025420))
#define GPIO_PORTF_PUR_R        (*((volatile unsigned long *)0x40025510))
#define GPIO_PORTF_DEN_R        (*((volatile unsigned long *)0x4002551C))
#define GPIO_PORTF_LOCK_R       (*((volatile unsigned long *)0x40025520))
#define GPIO_PORTF_CR_R         (*((volatile unsigned long *)0x40025524))
#define GPIO_PORTF_AMSEL_R      (*((volatile unsigned long *)0x40025528))
#define GPIO_PORTF_PCTL_R       (*((volatile unsigned long *)0x4002552C))
#define SYSCTL_RCGC2_R          (*((volatile unsigned long *)0x400FE108))

//--------------------------------------------------------------------------------------------------------------------------
// 2. Global Declarations

//    Global Variables

//    Function Prototypes
void DisableInterrupts(void); // Disable interrupts
void EnableInterrupts(void);  // Enable interrupts
void Delay1ms(unsigned long msec);
void PortE_Init(void);

//--------------------------------------------------------------------------------------------------------------------------
// 3. Functions/Subroutines

int main(void){ 
  TExaS_Init(SW_PIN_PE0, LED_PIN_PE1, ScopeOn);  // activate grader and set system clock to 80 MHz
  EnableInterrupts();                            // enable interrupts for the grader
	PortE_Init();
	//SET PE1 HIGH
	
  while(1){
    Delay1ms(100);
		if (){//Switch Pressed
			//toggle LED by using ^=
		} else {
			//Keep LED ON
		}
  }
}

//--------------------------------------------------------------------------------------------------------------------------
// PortE_Init: Subroutine to initialize port E pins for input and output
// PE0 is an input and PE1 is an output red LED
// Inputs: None
// Outputs: None
// Notes: ...
void PortE_Init(void){ volatile unsigned long delay;
  SYSCTL_RCGC2_R |= 0x10;           // Port E clock
  delay = SYSCTL_RCGC2_R;           // wait 3-5 bus cycles
  GPIO_PORTE_DIR_R |= 0x02;         // PE1 output
  GPIO_PORTE_DIR_R &= ~0x01;        // PE0 input 
  GPIO_PORTE_AFSEL_R &= ~0x03;      // not alternative
  GPIO_PORTE_AMSEL_R &= ~0x03;      // no analog
  GPIO_PORTE_PCTL_R &= ~0x000000FF; // bits for PE1,PE0
  GPIO_PORTE_DEN_R |= 0x03;         // enable PE1,PE0
}

//--------------------------------------------------------------------------------------------------------------------------
// Delay1ms: Subroutine to delay in units of milliseconds
// Inputs:  Number of milliseconds to delay
// Outputs: None
// Notes:   assumes 80 MHz clock
void Delay1ms(unsigned long msec){
	unsigned long i = msec * 80000 / 6; // 100ms * 80MHz / 6 cycles per loop = 1333333
	while(i > 0){
      i = i - 1;
  }
}
